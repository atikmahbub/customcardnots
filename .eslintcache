[{"/home/atik/Documents/Fiver/Project2/ucardelite/src/index.js":"1","/home/atik/Documents/Fiver/Project2/ucardelite/src/App.js":"2","/home/atik/Documents/Fiver/Project2/ucardelite/src/Routes/MenuItem.js":"3","/home/atik/Documents/Fiver/Project2/ucardelite/src/Components/NavigationMenu.js":"4","/home/atik/Documents/Fiver/Project2/ucardelite/src/Routes/Routes.js":"5","/home/atik/Documents/Fiver/Project2/ucardelite/src/Views/Gallery/Gallery.js":"6","/home/atik/Documents/Fiver/Project2/ucardelite/src/Views/Work/Work.js":"7","/home/atik/Documents/Fiver/Project2/ucardelite/src/Views/LandingPage/Home.js":"8","/home/atik/Documents/Fiver/Project2/ucardelite/src/Views/Order/Order.js":"9","/home/atik/Documents/Fiver/Project2/ucardelite/src/Views/Faq/Faq.js":"10","/home/atik/Documents/Fiver/Project2/ucardelite/src/Views/Contact/Contact.js":"11","/home/atik/Documents/Fiver/Project2/ucardelite/src/Components/FrontCard.js":"12","/home/atik/Documents/Fiver/Project2/ucardelite/src/Components/BackCard.js":"13","/home/atik/Documents/Fiver/Project2/ucardelite/src/Views/Order/ControlPanel.js":"14","/home/atik/Documents/Fiver/Project2/ucardelite/src/Data/work.js":"15","/home/atik/Documents/Fiver/Project2/ucardelite/src/Data/faq.js":"16","/home/atik/Documents/Fiver/Project2/ucardelite/src/Components/CustomTextField.js":"17","/home/atik/Documents/Fiver/Project2/ucardelite/src/Components/ToggleButton.js":"18","/home/atik/Documents/Fiver/Project2/ucardelite/src/Components/ToggleImage.js":"19","/home/atik/Documents/Fiver/Project2/ucardelite/src/Components/ToggleBorder.js":"20","/home/atik/Documents/Fiver/Project2/ucardelite/src/Components/CustomizeItem.js":"21","/home/atik/Documents/Fiver/Project2/ucardelite/src/Views/Order/Invoice.js":"22","/home/atik/Documents/Fiver/Project2/ucardelite/src/Helper/checkCardName.js":"23"},{"size":245,"mtime":1611856826662,"results":"24","hashOfConfig":"25"},{"size":761,"mtime":1612548075730,"results":"26","hashOfConfig":"25"},{"size":292,"mtime":1611774278755,"results":"27","hashOfConfig":"25"},{"size":836,"mtime":1612547472568,"results":"28","hashOfConfig":"25"},{"size":672,"mtime":1611919167192,"results":"29","hashOfConfig":"25"},{"size":124,"mtime":1611949603513,"results":"30","hashOfConfig":"25"},{"size":1026,"mtime":1611914828146,"results":"31","hashOfConfig":"25"},{"size":2359,"mtime":1612462547733,"results":"32","hashOfConfig":"25"},{"size":1624,"mtime":1612547355138,"results":"33","hashOfConfig":"25"},{"size":1532,"mtime":1611925158453,"results":"34","hashOfConfig":"25"},{"size":1294,"mtime":1612470300475,"results":"35","hashOfConfig":"25"},{"size":3253,"mtime":1612378251787,"results":"36","hashOfConfig":"25"},{"size":1719,"mtime":1612546603385,"results":"37","hashOfConfig":"25"},{"size":6218,"mtime":1612469028504,"results":"38","hashOfConfig":"25"},{"size":803,"mtime":1611912736596,"results":"39","hashOfConfig":"25"},{"size":8732,"mtime":1611854408327,"results":"40","hashOfConfig":"25"},{"size":1053,"mtime":1612176414512,"results":"41","hashOfConfig":"25"},{"size":1440,"mtime":1612203662755,"results":"42","hashOfConfig":"25"},{"size":1363,"mtime":1612463733961,"results":"43","hashOfConfig":"25"},{"size":1491,"mtime":1612203669327,"results":"44","hashOfConfig":"25"},{"size":3968,"mtime":1612379592632,"results":"45","hashOfConfig":"25"},{"size":2031,"mtime":1612469547599,"results":"46","hashOfConfig":"25"},{"size":333,"mtime":1612546706934,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1cm5ssl",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/atik/Documents/Fiver/Project2/ucardelite/src/index.js",[],["102","103"],"/home/atik/Documents/Fiver/Project2/ucardelite/src/App.js",[],"/home/atik/Documents/Fiver/Project2/ucardelite/src/Routes/MenuItem.js",[],"/home/atik/Documents/Fiver/Project2/ucardelite/src/Components/NavigationMenu.js",[],"/home/atik/Documents/Fiver/Project2/ucardelite/src/Routes/Routes.js",[],"/home/atik/Documents/Fiver/Project2/ucardelite/src/Views/Gallery/Gallery.js",[],"/home/atik/Documents/Fiver/Project2/ucardelite/src/Views/Work/Work.js",[],"/home/atik/Documents/Fiver/Project2/ucardelite/src/Views/LandingPage/Home.js",["104","105","106","107"],"import React from 'react'\nimport '../../Styles/css/home.css'\nimport { Button } from '@material-ui/core'\n// import BG3 from '../../Assets/images/bg/bg3.png'\nimport YOUR from '../../Assets/images/text/YOUR.png'\nimport LOGO from '../../Assets/images/text/LOGO.png'\nimport HERE from '../../Assets/images/text/HERE.png'\n\nfunction Home() {\n    return (\n        <>\n            <div className=\"row\">\n                <div className=\"col-md-6 home-first\">\n                    <div className=\"full-container\">\n                        <div className=\"landing-card-container\">\n                            <div className=\"landing-chip\"></div>\n                            <div className=\"landing-logo\"> \n                                <span><img src={YOUR}/></span> \n                                <span><img src={LOGO} className=\"LOGO\"/></span>  \n                                <span><img src={HERE} className=\"HERE\"/></span>\n                            </div>\n                            <div className=\"landing-card-number\">\n                                <span>7777 7777 7777 7777</span>\n                                <span className=\"landing-valid\">Valid SAT 77/77</span>\n                            </div>\n                        </div>\n                        <div className=\"home-button\">\n                            <Button size=\"large\" variant=\"outlined\" color=\"default\">\n                                Customize Your Own Card\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Home\n\n\n\n{/* <div className=\"test\">\n<div className=\"row\">\n    <div className=\"col-md-12 home-left\">\n        <div className=\"landing-card-container card-1\">\n            <div className=\"landing-chip\"></div>\n            <div className=\"landing-logo\"> <span>Your</span> <span>Logo</span>  <span>Here</span></div>\n            <div className=\"landing-card-number\">\n                <span>7777 7777 7777 7777</span>\n                <span className=\"landing-valid\">Valid SAT 77/77</span>\n            </div>\n        </div>\n    </div>\n    </div>\n    <div className=\"row\">\n    <div className=\"col-md-12 home-button\">\n        <Button size=\"large\" variant=\"outlined\" color=\"default\">\n            Customize Your Own Card\n        </Button>\n    </div>\n    </div>\n</div> */}\n","/home/atik/Documents/Fiver/Project2/ucardelite/src/Views/Order/Order.js",[],"/home/atik/Documents/Fiver/Project2/ucardelite/src/Views/Faq/Faq.js",[],"/home/atik/Documents/Fiver/Project2/ucardelite/src/Views/Contact/Contact.js",[],"/home/atik/Documents/Fiver/Project2/ucardelite/src/Components/FrontCard.js",["108","109","110","111"],"import React,{useEffect} from 'react'\nimport '../Styles/css/card.css'\nimport {RiVisaLine ,RiMastercardFill} from 'react-icons/ri'\nimport Draggable from 'react-draggable';\nimport B1 from '../Assets/images/border/b1.png'\nimport B2 from '../Assets/images/border/b2.png'\n\n\nfunction FrontCard({data , background}) {\n    const [state,setState] = React.useState({\n        activeDrags: 0,\n      })\n\n    \n    const onStart = () => {\n        setState({activeDrags: ++state.activeDrags});\n      };\n\n    const  onStop = () => {\n        setState({activeDrags: --state.activeDrags});\n      };\n\n    const dragHandlers = {onStart: onStart, onStop: onStop};\n\n    let divStyle = {\n        backgroundImage: 'url(' + background + ')',\n        backgroundSize : 'cover'\n    }\n\n    let imageStyle = {\n        position : \"absolute\" , \n        height : `${data?.logoHeight}px`,\n        width : `${data?.logoWidth}px`,\n    }\n\n\n    return (\n        <div className=\"card-container\"  style={divStyle} >\n             <Draggable {...dragHandlers}>\n                <img \n                    src={data && data?.logo}  \n                    style={imageStyle}\n                />\n            </Draggable>\n            <div className=\"card-portion\">\n                {\n                data && data.customText &&\n                    <>\n                        <Draggable {...dragHandlers}>\n                            <div className=\"custom-text-last\" style={{fontSize: `${data.textSize+\"px\"}`}}>{data.customText}</div>\n                        </Draggable>\n                    </>\n                }\n            </div>\n            <div className=\"card-portion\">\n                <span className=\"small-chip\"></span>\n            </div>\n            <div className=\"card-portion card-number\">\n                {\n                data?.cardNumberPosition === \"front\" &&\n                    <>\n                        <Draggable {...dragHandlers}>\n                            <div>7777 7777 7777 7777</div>\n                        </Draggable>\n                        <Draggable {...dragHandlers}>\n                            <div>Valid 77/77</div>\n                        </Draggable>\n                    </>\n                }\n            </div>\n            <div className=\"card-portion name-type-portion\">\n                <Draggable {...dragHandlers}>\n                    <div>\n                        {  \n                            data?.primaryName || \"(Name Here)\"\n                        }\n                    </div>\n                </Draggable>\n                <Draggable {...dragHandlers}>\n                    <div>\n                        {\n                        data && data.cardNumberType === 'visa' ?\n                            <RiVisaLine className=\"card-type-icon\"/> : <RiMastercardFill className=\"card-type-icon\"/>\n                        }\n                        \n                    </div>\n                </Draggable>\n            </div>\n            {\n            data && data.borderIndicator === 'b1' &&\n                <img src={B1} className=\"img-border\"/>\n            }\n            {\n            data && data.borderIndicator === 'b2' &&\n                <img src={B2} className=\"img-border\"/>\n            }\n            \n        </div>\n    )\n}\n\nexport default FrontCard\n\n\n\n\n \n\n\n","/home/atik/Documents/Fiver/Project2/ucardelite/src/Components/BackCard.js",[],"/home/atik/Documents/Fiver/Project2/ucardelite/src/Views/Order/ControlPanel.js",["112"],"import React , {useState, useEffect} from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport CustomTextField from '../../Components/CustomTextField'\nimport ToggleButtonContainer from '../../Components/ToggleButton'\nimport '../../Styles/css/controlpanel.css'\nimport ToggleImage from '../../Components/ToggleImage'\nimport ToggleBorder from '../../Components/ToggleBorder'\nimport CustomizeItem from '../../Components/CustomizeItem'\nimport Invoice from './Invoice';\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function ControlPanel({getValue}) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [value, setValue] = React.useState(0);\n  const [invoiceItem, setInvoiceItem] = React.useState()\n\n  const [controlValue ,setControlValue] = useState({\n      primaryName : \"\",\n      cardNumberPosition : \"front\",\n      cardNumberType : \"visa\",\n      borderIndicator : \"\",\n      customText : \"\",\n      textSize : null,\n      backgroundIndicator : \"\",\n      logo : null,\n      logoWidth : null,\n      logoHeight : null\n  })\n\n\n  useEffect(()=>{\n        setInvoiceItem({\n          border : controlValue.borderIndicator\n        })\n  },[controlValue])\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n\n  useEffect(()=>{\n    if(getValue){\n      getValue(controlValue)\n    }\n  },[controlValue , setControlValue])\n\n  const ChipPositionData = [\n    {value : \"front\" , label : \"Front\" },\n    {value : \"back\" , label : \"Back\"},\n  ]\n\n  const ChipTypeData = [\n    {value : \"visa\" , label : \"Visa\" },\n    {value : \"master\" , label : \"Master Card\"},\n  ]\n\n  const handleOptions = (value) =>{\n    if(value){\n      setControlValue({\n        ...controlValue,\n        cardNumberPosition : value\n      })\n    }\n  }\n\n  const handleOptionsType = (value) =>{\n    if(value){\n      setControlValue({\n        ...controlValue,\n        cardNumberType : value\n      })\n    }\n  }\n\n  const handleBorderToggle = (value) =>{\n    if(value){\n      setControlValue({\n        ...controlValue,\n        borderIndicator : value\n      })\n    }\n  }\n\n  const handleBackGround = (value) =>{\n    if(value){\n      setControlValue({\n        ...controlValue,\n        backgroundIndicator : value\n      })\n    }\n  }\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n          aria-label=\"full width tabs example\"\n        >\n          <Tab label=\"Edit Card Info\" {...a11yProps(0)} />\n          <Tab label=\"Choose Metal\" {...a11yProps(1)} />\n          <Tab label=\"Choose Border\" {...a11yProps(2)} />\n          <Tab label=\"Add Logo/Text\" {...a11yProps(3)} />\n        </Tabs>\n      </AppBar>\n        <TabPanel value={value} index={0} dir={theme.direction}>\n            <CustomTextField label=\"Add Name\" value={controlValue.primaryName} onChange={(e) => setControlValue({...controlValue , primaryName : e.target.value}) }/>\n                <div className=\"row\">\n                  <div className=\"col-md-12 control-options\">\n                      <span className=\"control-options-lebel-text\">Card Number On</span>\n                      <ToggleButtonContainer \n                        data={ChipPositionData} \n                        getOptions = {handleOptions}\n                        defaultValue = {controlValue.cardNumberPosition}\n                      />\n                  </div>\n                  <div className=\"col-md-12 control-options\">\n                      <span className=\"control-options-lebel-text\">Card Type</span>\n                      <ToggleButtonContainer \n                          data={ChipTypeData}\n                          defaultValue = {controlValue.cardNumberType}\n                          getOptionsType = {handleOptionsType}\n                      />\n                  </div>\n                </div>\n            </TabPanel>\n            <TabPanel value={value} index={1} dir={theme.direction}>\n                    <ToggleImage getBackground={handleBackGround}/>\n            </TabPanel>\n            <TabPanel value={value} index={2} dir={theme.direction}>\n                    <ToggleBorder\n                      getValue = {handleBorderToggle}\n                      />\n            </TabPanel>\n            <TabPanel value={value} index={3} dir={theme.direction}>\n                <CustomizeItem \n                  textSize={controlValue.textSize} \n                  customText ={controlValue.customText}\n                  customImage = {controlValue.logo}\n                  customImageWidth = {controlValue.logoWidth}\n                  customImageHeight = {controlValue.logoHeight} \n                  getValue={\n                            (value) => \n                              value && setControlValue({\n                              ...controlValue , \n                              customText : value.customText ,\n                              textSize : value.textSize,\n                              logo : value.logo,\n                              logoWidth : value.logoWidth,\n                              logoHeight : value.logoHeight,\n                        })\n                  }\n                />\n            </TabPanel>\n            <hr></hr>\n            <Invoice data={invoiceItem}/>\n    </div>\n  );\n}","/home/atik/Documents/Fiver/Project2/ucardelite/src/Data/work.js",[],"/home/atik/Documents/Fiver/Project2/ucardelite/src/Data/faq.js",[],"/home/atik/Documents/Fiver/Project2/ucardelite/src/Components/CustomTextField.js",[],"/home/atik/Documents/Fiver/Project2/ucardelite/src/Components/ToggleButton.js",["113","114","115","116","117"],"import React, { useEffect } from 'react'\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport { makeStyles,withStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n    toggle: {\n        outlineColor: '#EFE436', \n        outlineWidth: '1px', \n        outlineStyle: 'solid',\n        color : \"black\"\n    },\n  }));\n\n\nconst ToggleButtonContainer = ({data , getOptions , defaultValue , getOptionsType}) => {\n    const classes = useStyles()\n    const [groupValue, setGroupValue] = React.useState();\n\n    const handleChange = (e, value) => {\n        if(value){\n            setGroupValue(value)\n        }\n    };\n\n    useEffect(()=>{\n        if(getOptionsType){\n            getOptionsType(groupValue)\n        }\n\n    },[,groupValue,setGroupValue])\n\n    useEffect(()=>{\n        if(getOptions){\n            getOptions(groupValue)\n        }\n    },[,groupValue, setGroupValue])\n\n\n    return (\n        <ToggleButtonGroup size=\"large\" value={defaultValue} exclusive onChange={handleChange}>\n            {            \n                data.map((item)=>(\n                    <ToggleButton value = {item.value}  aria-label=\"left aligned\" className={classes.toggle}>\n                        {item.label}\n                    </ToggleButton>\n                ))\n            }\n        </ToggleButtonGroup>\n    )\n}\n\nexport default ToggleButtonContainer\n","/home/atik/Documents/Fiver/Project2/ucardelite/src/Components/ToggleImage.js",["118"],"import React , {useEffect, useState} from 'react'\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\n\n\nconst TogglemImage = ({getBackground}) => {\n\n    const [groupValue, setGroupValue] = useState();\n    console.log(\"888\" , groupValue)\n    const handleChange = (_event, value) => {\n        if(value){\n            setGroupValue(value);\n        }\n    };\n\n    useEffect(()=>{\n        if(getBackground){\n            getBackground(groupValue)\n        }\n    },[groupValue,setGroupValue])\n\n\n    return (\n        <ToggleButtonGroup size=\"large\" value={groupValue} exclusive onChange={handleChange} className = \"toggle-Image\">\n            <ToggleButton value = \"m1\" aria-label=\"left aligned\" className=\"toggle-image-item im1\">\n                +100$\n            </ToggleButton>\n            <ToggleButton value = \"m2\"  aria-label=\"left aligned\" className=\"toggle-image-item im2\">\n                +100$\n            </ToggleButton>\n            <ToggleButton value = \"m3\"  aria-label=\"left aligned\" className=\"toggle-image-item im3\">\n                +100$\n            </ToggleButton>\n            <ToggleButton value = \"m4\"  aria-label=\"left aligned\" className=\"toggle-image-item im4\">\n               +100$\n            </ToggleButton>\n\n        </ToggleButtonGroup>\n    )\n}\n\nexport default TogglemImage\n","/home/atik/Documents/Fiver/Project2/ucardelite/src/Components/ToggleBorder.js",["119","120","121","122"],"import React,{useEffect} from 'react'\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport B1 from '../Assets/images/border/b1.png'\nimport B2 from '../Assets/images/border/b2.png'\n\n\nconst ToggleBorder = ({getValue}) => {\n\n    const [groupValue, setGroupValue] = React.useState();\n \n    const handleChange = (_event, value) => {\n        if(value){\n            setGroupValue(value);\n        }\n    };\n\n    useEffect(()=>{\n        if(getValue){\n            getValue(groupValue)\n        }\n    },[,groupValue,setGroupValue])\n\n\n    return (\n        <ToggleButtonGroup size=\"large\" value={groupValue} exclusive onChange={handleChange} className = \"toggle-border\">\n            <ToggleButton value = \"b1\" aria-label=\"left aligned\" className=\"border-toggle-item\" >\n                <img src={B1} className=\"img-border\"/>\n                <div className=\"border-price\">+5$</div>\n            </ToggleButton>\n           \n            <ToggleButton value = \"b2\"  aria-label=\"left aligned\" className=\"border-toggle-item\">\n                <img src={B2}  className=\"img-border\"/>\n                <div className=\"border-price\">+5$</div>\n            </ToggleButton>\n            <ToggleButton value = \"none\"  aria-label=\"left aligned\" className=\"border-toggle-item\">\n                \n                <div className=\"border-price\">None</div>\n            </ToggleButton>\n        </ToggleButtonGroup>\n    )\n}\n\nexport default ToggleBorder\n","/home/atik/Documents/Fiver/Project2/ucardelite/src/Components/CustomizeItem.js",["123"],"import React,{useState , useEffect} from 'react'\nimport Slider from '@material-ui/core/Slider';\nimport { Button } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport CustomTextField from './CustomTextField'\n\nfunction CustomizeItem({getValue, customText , textSize , customImage, customImageHeight , customImageWidth}) {\n    const [state,setState] = useState({\n        customText : customText || \"\",\n        textSize : textSize || 20,\n        logo: customImage || null,\n        logoWidth : customImageWidth || 20,\n        logoHeight : customImageHeight || 20,\n    })\n\n    const [imageContol,setImageControl] = useState(false)\n\n    const handleFontSize = (e , value) =>{\n        setState({\n            ...state,\n            textSize : value\n        })\n    }\n\n    useEffect(()=>{\n        if(customImage){\n            setImageControl(true)\n        }\n    },[customImage])\n\n    useEffect(()=>{\n        if(getValue){\n            getValue(state)\n        }\n    },[state,setState])\n\n    const handleCustomText = (e) =>{\n        setState({\n            ...state,\n            customText : e.target.value\n        })\n    }\n\n    const handleImageWidth = (e , value) =>{\n        setState({\n            ...state,\n            logoWidth : value\n        })\n    }\n\n    const handleImageHeight = (e, value) =>{\n        setState({\n            ...state,\n            logoHeight : value\n        })\n    }\n\n    const handleImage = (e) =>{\n        const image = e.target.files[0]\n        const imageUrl = URL.createObjectURL(image)\n        setState({\n            ...state,\n            logo : imageUrl\n        })\n        setImageControl(true)\n    }\n\n    const handleRemoveLogo = () =>{\n        setState({\n            ...state,\n            logo : null\n        })\n        setImageControl(false)\n    }\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-md-12\">\n                <input\n                    accept=\"image/*\"\n                    style={{display : \"none\"}}\n                    id=\"contained-button-file\"\n                    type=\"file\"\n                    onChange={handleImage}\n                />\n                <label htmlFor=\"contained-button-file\" className=\"col-md-12\">\n                    <Button variant=\"outlined\" size=\"large\" fullWidth style={{color : \"#333\"}} component=\"span\">\n                        Upload Logo\n                    </Button>\n                </label>\n                {\n                    imageContol &&\n                    <>\n                    <div className=\"row image-control\">\n                        <div className=\"col-md-6\">\n                            <Typography  gutterBottom>Width</Typography>\n                            <Slider max=\"100\" aria-label=\"custom thumb label\" defaultValue={20} color=\"primary\" onChange={handleImageWidth}/>\n\n                        </div>\n                        <div className=\"col-md-6\">\n                            <Typography  gutterBottom>Height</Typography>\n                            <Slider max=\"100\" aria-label=\"custom thumb label\" defaultValue={20} color=\"primary\" onChange={handleImageHeight}/>\n                        </div>\n                    </div>\n                    <div className=\"row image-control justify-content-end\">\n                            <Button variant=\"contained\" color=\"secondary\" onClick={handleRemoveLogo}>Remove Logo</Button>\n                    </div>\n                    </>\n                }\n            </div>\n            <div className=\"col-md-12 custom-text\">\n                    <CustomTextField label=\"Add Custom Text\" value={customText} onChange={handleCustomText}/>   \n            </div>\n            <div className=\"col-md-12 custom-text\">\n                    <Typography  gutterBottom>Font Size</Typography>\n                    <Slider max=\"80\" aria-label=\"custom thumb label\" defaultValue={20} color=\"primary\" onChange={handleFontSize}/>\n            </div>\n        </div>\n    )\n}\n\nexport default CustomizeItem\n","/home/atik/Documents/Fiver/Project2/ucardelite/src/Views/Order/Invoice.js",[],"/home/atik/Documents/Fiver/Project2/ucardelite/src/Helper/checkCardName.js",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":18,"column":39,"nodeType":"130","endLine":18,"endColumn":56},{"ruleId":"128","severity":1,"message":"129","line":19,"column":39,"nodeType":"130","endLine":19,"endColumn":73},{"ruleId":"128","severity":1,"message":"129","line":20,"column":39,"nodeType":"130","endLine":20,"endColumn":73},{"ruleId":"131","severity":1,"message":"132","line":43,"column":1,"nodeType":"133","messageId":"134","endLine":63,"endColumn":11},{"ruleId":"135","severity":1,"message":"136","line":1,"column":15,"nodeType":"137","messageId":"138","endLine":1,"endColumn":24},{"ruleId":"128","severity":1,"message":"129","line":40,"column":17,"nodeType":"130","endLine":43,"endColumn":19},{"ruleId":"128","severity":1,"message":"129","line":91,"column":17,"nodeType":"130","endLine":91,"endColumn":55},{"ruleId":"128","severity":1,"message":"129","line":95,"column":17,"nodeType":"130","endLine":95,"endColumn":55},{"ruleId":"139","severity":1,"message":"140","line":84,"column":5,"nodeType":"141","endLine":84,"endColumn":37,"suggestions":"142"},{"ruleId":"135","severity":1,"message":"143","line":4,"column":21,"nodeType":"137","messageId":"138","endLine":4,"endColumn":31},{"ruleId":"139","severity":1,"message":"144","line":32,"column":7,"nodeType":"141","endLine":32,"endColumn":34,"suggestions":"145"},{"ruleId":"146","severity":1,"message":"147","line":32,"column":7,"nodeType":"141","messageId":"148","endLine":32,"endColumn":34},{"ruleId":"139","severity":1,"message":"149","line":38,"column":7,"nodeType":"141","endLine":38,"endColumn":35,"suggestions":"150"},{"ruleId":"146","severity":1,"message":"147","line":38,"column":7,"nodeType":"141","messageId":"148","endLine":38,"endColumn":35},{"ruleId":"139","severity":1,"message":"151","line":21,"column":7,"nodeType":"141","endLine":21,"endColumn":33,"suggestions":"152"},{"ruleId":"139","severity":1,"message":"140","line":22,"column":7,"nodeType":"141","endLine":22,"endColumn":34,"suggestions":"153"},{"ruleId":"146","severity":1,"message":"147","line":22,"column":7,"nodeType":"141","messageId":"148","endLine":22,"endColumn":34},{"ruleId":"128","severity":1,"message":"129","line":28,"column":17,"nodeType":"130","endLine":28,"endColumn":55},{"ruleId":"128","severity":1,"message":"129","line":33,"column":17,"nodeType":"130","endLine":33,"endColumn":56},{"ruleId":"139","severity":1,"message":"140","line":35,"column":7,"nodeType":"141","endLine":35,"endColumn":23,"suggestions":"154"},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getValue'. Either include it or remove the dependency array. If 'getValue' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["157"],"'withStyles' is defined but never used.","React Hook useEffect has a missing dependency: 'getOptionsType'. Either include it or remove the dependency array. If 'getOptionsType' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["158"],"no-sparse-arrays","Unexpected comma in middle of array.","unexpectedSparseArray","React Hook useEffect has a missing dependency: 'getOptions'. Either include it or remove the dependency array. If 'getOptions' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["159"],"React Hook useEffect has a missing dependency: 'getBackground'. Either include it or remove the dependency array. If 'getBackground' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["160"],["161"],["162"],"no-global-assign","no-unsafe-negation",{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},"Update the dependencies array to be: [controlValue, getValue, setControlValue]",{"range":"175","text":"176"},"Update the dependencies array to be: [getOptionsType, groupValue, setGroupValue]",{"range":"177","text":"178"},"Update the dependencies array to be: [getOptions, groupValue, setGroupValue]",{"range":"179","text":"180"},"Update the dependencies array to be: [getBackground, groupValue, setGroupValue]",{"range":"181","text":"182"},"Update the dependencies array to be: [getValue, groupValue, setGroupValue]",{"range":"183","text":"184"},"Update the dependencies array to be: [state, setState, getValue]",{"range":"185","text":"186"},[2193,2225],"[controlValue, getValue, setControlValue]",[822,849],"[getOptionsType, groupValue, setGroupValue]",[947,975],"[getOptions, groupValue, setGroupValue]",[530,556],"[getBackground, groupValue, setGroupValue]",[570,597],"[getValue, groupValue, setGroupValue]",[990,1006],"[state, setState, getValue]"]